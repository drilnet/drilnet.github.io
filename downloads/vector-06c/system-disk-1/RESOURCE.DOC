
                  Oперационная система CP/M.
                   Диалоговый дизассеммблер.
                    Руководство оператора.

                         Содержание.



 1. Введение.....................................................

 1.1. Возможные ошибки...........................................

 2.   Описание команд............................................

 2.1.  команда ";" - ввод коментария.............................
 2.2.  команда "A" - поиск DB....................................
 2.3.  командА "B" - ввод меток..................................
 2.4.  команда "C" - корректировка управляющей таблицы...........
 2.5.  команда "D" - вывод содержимого памяти....................
 2.6.  команда "E" - ввод меток в таблицу символов...............
 2.7.  команда "F" - поиск адреса или метки......................
 2.8.  команда "K" - удалить метку...............................
 2.9.  команда "L" - вывод листинга..............................
 2.10. команда "O" - установка смещения..........................
 2.11. команда "P" - создание пролога............................
 2.12. команда "Q" - подавление вывода на консоль................
 2.13. команда "R" - чтение файла................................
 2.14. команда "S" - запись на диск..............................
 2.15. команда "U" - определение области коментариев.............
 2.16. команда "Z" - закрыть файл .ASM...........................

 3.    Пример дизассемблирования.................................


 4.    Краткий перечень команд...................................





 1. Введение

      RESOURCE - диалоговый дизассемблер,  который был  разработан
 не  по  заранее составленноме плану,  а в результате  длитeльного
 общения  с компьютером,и который модифицировался свыше  двух  лет
 постановки в СР/М.

                     Структура RESOURCE.

      RESOURCЕ  - этo файл типa СОМ,  который занимает при  работе
 адреса С 100Н до 1700H,  за которыми идет стек,  начиная  с 1800Н
 располагается  управляющая таблица на 512 входов по 3 байта  каж-
 дый, которая определяет формат листинга, получаемого дизассембле-
 ром т.е.  выявление DB,  DS,  DW  команд D т.д. начиная  с 1Е00Н
 располагается таблица символических имен, она не имеет определен-
 ной длины   и  если символические имена не используются, занимает
 два байта.

 Собственные адреса задаются без смещения.

      Например, если вы дизассемблируете файл типа  .СОМ,  который
 обычно загружается с адреса 100Н,  вы можете предварительно уста-
 новить  смещение  2F00Н,  при этом программа загрузится с  адреса
 100Н+2F00Н=3000Н, однако  при вводе команд вы не должны учитывать
 это смещение, например: L100, D100.

      Размер смещения выбирается   исходя из размеров вашей памяти
 и предполагаемого количества символических  имен,  например:  при
 смещении  1F00Н  файлы типа СОМ загружаются в память,  начиная  с
 адреса  2000Н,  при этом таблица символических имен  имеет  об'ем
 2000Н-1Е00Н=200Н, т.е. 512 байт.

      Каждый символ имени занимает в таблице     1 байт.  Если вы
 используете  имена длиной в 10 символов,  то каждое имя в  таблице
 будет  занимать  10 байт,  таким образом   при смещении  1F00Н  в
 таблице может поместиться около 5  имен, если их будет больше, то
 таблица  может  затереть дизассемблируемую программу  (это  легко
 исправить,  установив  большее  смещение  и вновь  загрузить  СОМ
 файл).

      RESOURCE позволяет вводить коментарии в  листинг,  предвари-
 тельно  определив  с помощью команды у область памяти   куда  они
 заносятся, например:

      Вы хотите дизассембировать файл F00.СОМ  длиной 8К и предпо-
 лагаете в нем наличие 30  меток.

                 30 Х 10 = 3000 байт

      Отведем под метки 4К,  при этом она займет память до  адреса
 1Е00Н+1000Н=2Е00Н,  поэтому  файл нужно загрузить с адреса 2Е00Н
 исходя из этого,  выбираем смещение 2Е00Н-100Н=2D00Н,  устанавли-
 ваем смещение

                 02D00Н

      и считываем .СОМ файл

                 RF00.СОМ

      после чтения RESOURCE выводит сообщение

                 4Е00    2100

      которое  говорит  о том,  что файл разместился в  памяти  до
 адреса 4Е00Н (или 2100Н, если бы загружался со 100Н).

      Для комментариев можно отвести область памяти вслед за  .СОМ
 файлом, например:  U5000Н.

      Команда  "?"  выводит сведения об использовании  памяти  под
 управляющую таблицу  таблицу меток и комментарии.

      Если вы хотите вывести содержание памяти без смещения, уста-
 новите  его равным нулю,  но не забудьте вернуться  обратно.  При
 выводе команды "О"  RESOURCE выводит установленное смещение.

 1.1. Возможные ошибки

      - переполнение  таблицы  символических  имен  затирает  .СОМ
        файл.

      - переполнение  управляющей таблицы затирает таблицу  симво-
        лических имен.

      - переполнение области комментариев затирает BDOS.

      - при использовании неправильного смещения может  затираться
        BDOS.

      - при  создании  псевдокоманд DB воможны ошибки,  когда  код
        команды, следующий за массивом DB, также выводится как DB.
        Например,  если за массивом "GOBBELDY" следует команда LXI
        H,F00,  то  код  команды LXI H (21H  будет  воспринят  как
        символ "!".  Вы должны вручную исправить эту ошибку, введя
        по адресу команды LXI H в управляющую таблицу признак "I",
        а для второго байта можно убрать из таблицы признак "I".

      - попытка  получения  содержимого памяти  по  действительным
        адресам  без установки нулевого  смещения.  (Не  забывайте
        восстанавливать его).┼


      - не забывайте размер дизассемблируемого файла.

      - при  дизассембировании файлов  больших размеров разбивайте
        их на части. Помечайте порядковыми номерами файлы, в кото-
        рые вы записываете части дизассемблируемой программы:

                 STEMP1.SYM
                 STEMP1.CTL
                 STEMP1.DOC

      - пропуск меток:

        допустим, вы имеете метку для DW

        DELT:                    ; 172CH
                        DW 100H

        если где-нибудь в программе встретится команда LDA 172DH и
        вы используете команду В, вы в этой команде получите метку
        L172D,  которая будет неопределена,  т.к  находится посре-
        дине DW.

        для  исправления  удалите  эту метку и  введите  новую  со
        смещением от начала DW

                        K.L172D
                        DB 0
                        E172D,.DELT+1
                        DB 1

        при  трансляции  этот вариант дает  правильный  результат,
        хотя он не корректен с точки зрения читабельности програм-
        мы.

      - команда  "B" может затереть управляющий символ Е в таблице
        управления.  Например,  если ваша программа оканчивается в
        3FFH, а дальше память заполнена нулями, то по команде

                        В100,400

        управляющий символ Е в адресе 3FFH будет потерян.

       -операнды команд SHLD,LHLD могут быть восприняты как DW,  а
        LDA и STА как DB.


 2. Описание команд.


      после  загрузки RESOURCE выводит  "*",  которая  сообщает  о
 готовности к приему команд.  Каждая команда - это символ с после-
 дующими  операндами.  Операнды могут быть либо  16-ричными,  либо
 символическими.  В  последнем  случае перед ними  ставится  точка
 (.L012E). Операнды разделяются запятыми или пробелами.

 2.1. Команда ";" - ввод комментария.

      перед  вводом  комментариев должна быть  определена  область
 комментариев с помощью команды "U".

      Форматы команды:

 ;адрес, комментарий - вводит комментарий по указанному адресу
 ;адрес              - выводит существующий комментарий
 ;                   - выводит содержимое области комментариев
 ;адрес,             - удаляет комментарий

      Символ  "\" рассматривается как новая  строка,  т.е.  \тест\
 будет формировать:

 ;
 ; тест
 ;

 2.2. команда "A" - поиск DB

      Эта команда осуществляет дизассембирование программ и встав-
 ляет DB там,  где встречаются 8 или более символов.  Форматы опе-
 рандов см. в команде "L".

 2.3. Команда "B" - ввод меток.

      Действие  этой  команды подобно  предыдущей,  только  вместо
 ввода DB она осуществляет ввод меток для двухбайтовых операндов и
 создает таблицу .SYM . Метки вносятся в виде LXXXX.  Форматы опе-
 рандов такие же, как в "L".


 2.4. Команда "C" - корректировка управляющей таблицы.

      Управляющая таблица создается при выполнении команд A,W и L.
 Команда  с позволяет просмотреть ее и  откорректировать.  Форматы
 команд:

 С       - выводит всю таблицу
 СNNNN   - выводит таблицу, начиная с NNNN
 CNNNN,X - определяет  формат  вывода листинга,  начиная с  адреса
           NNNN до следующего управляющего входа. Значения Х:

                B=DB (символы ASCII, 0DH, 0AH, 0)
                W=DW (в случае меток)
                S=DS (до следующего входа)
                I- команды
                K- удаление входа с указанным адресом
                E- конец дизассемблирования.

      Каждый  управляющий вход оначает,  что листинг  выводится  с
 новой строки.  Например,  если вы получили при дизассемблировании
 строки

                 DB 'INVALID PARAMETR',0DH
                 DB 0AH CAN'T EDIT A FILE WHILE MAILMERGING ---      фИНИСХ ОР АБАНДОН мАИЛмЕРГЕ БЕФОРЕ ЕДИТИНГ.  ┴┴ фИНИ       СХИНГ ПРИНТ БЕФОРЕ ЕЬИТ            АНАЛОГИЧНО ИЗ

                 DB 'TAPESAVEDIRERAREN'

      можно получить

                 DB 'TAPE'
                 DB 'SAVE'
                 DB 'DIR'
                 DB 'ERA'
                 DB 'REN'


 2.5. Команда  D - вывод содержимого памяти.

      Форматы команды:

 DXXXX      - выводит 80Н ячеек, начиная с адреса ХХХХ
 DAAAA,ВВВВ - выводит, начиная с AAAA до ВВВВ
 D,ВВВВ     - продолжает выводить до ВВВВ
 D          - продолжает выводить 80H ячеек

      Установленную  длину 80Н можно изменить D=NN,  где NN  новая █
 установленная длина. Например:

 D=100

 или

 D=100,200

 устанавливает длину 100  и выводит 200-2.

      Специальные форматы команды:

 DS        - выводит таблицу символов
 DS.SYMBOL - выводит таблицу символов, начиная с .SYMBOL

 2.6. Команда Е - ввод меток в таблицу символов.

      осуществляет ввод меток по указанным адресам.

      формат команды:

 ENNNN,.SYMBOL

      Метка может быть любой длины и содержать символы А-Z, 0-9, а
 также "+" или "-" это позволяет вводить:

                 Е5D,.FCB+1

      Однако  контроль такого выражения не осуществляется и поэто-
 му, например, команда:

                 E5D,.FCB+2

      будет неверна (помня,  что FCB начинается в 5С), однако, она
 может быть введена.  Если вы ввели две разные метки в один и═ тот
 же  адрес,  то в листинге выведется первая по алфавиту.  Если  вы
 имеете метку с неправильным адресом, вы можете, не удаляя старую,
 ввести новую с правильным адресом.


 2.7. Команда F - поиск адреса или метки.

      Эта  команда осуществляет поиск адреса или метки,  начиная с
 указанного адреса,  и выводит адреса,  где встречается адрес  или
 метка. Форматы команды:

 FNNNN,SSSS - поиск адреса NNNN, начиная с адреса SSSS
 F          - продолжение ранее заданного поиска
 FNNNN      - поиск адреса NNNN, начиная с последнего адреса оста-
              новки F

      Команда F осуществляет поиск, начиная с указанного адреса, и
 продолжает его до ввода любого символа с клавиатуры.

 2.8. Команда K - удалить метку.

      Формат команды:

 K.SYMBOL

 2.9. Команда L - вывод листинга.

      Kоманда  L осуществляет вывод листинга на консоль или запись
 его на диск, если перед ней была введена команда

                 "SFILENAME.ASM".

      Форматы команды:

 L          - выводит 10 строк с установленного РС
 LSSSS,EEEE - выводит листинг с адреса SSSS до EEEE
 LSSSS      - выводит 10 строк, начиная с SSSS
 L,EEEE     - выводит с текущего РС до EEEE

      Если вы ввели в управляющую таблицу вход Е,  то дизассембли-
 рование  прекратится при достижении его.  Это  позволяет  вводить
 команду

                 LSTART,FFFF

      количество строк,  выводимое по L,  может быть изменено L=NN
 где NN - 16-ричное число, т.е. L=14 устанавливет 20 строк.

      Можно установить число строк,  одновременно указывая, откуда
 выводить:

 L=9,100

 выводит 9 строк, начиная с адреса 100

 Можно  задавать запись файла целиком, используя

                 LSSSS,EEEE

 или  можно записывать отдельными частями,  если вы не будете
 изменять начальный адрес (т.е. пользоваться  только командами L и
 L,NNNN), то файл будет непрерывным.

      В  промежутке  между записью частей вы  можете  использовать
 команду D и другие без влияния на записываемый файл.

 2.10. Команда O - установка смещения.

 O     - выводит текущее смещение.
 ONNNN - устанавливает смещение NNNN.

      Напомним,  что смещение всегда добавляется к адресу  указан-
 ному в командах A,  В,  D или L. Для вывода содержимого памяти по
 действительным адресам установите смещение 0.

 2.11. Команда Р - создание пролога.

      Эта команда создает псевдокоманду ORG, а также псевдокоманды
 еяу  для меток,  значения которых находятся за пределами  адресов
 вашей  программы.  Например,  если дизассемблируется программа  с
 адреса  100Н  до 3FFH,  команда Р будет создавать 'FCB EQU  5CH',
 если FCB есть в символической таблице. Обычно, для записи на диск
 задается следующая последовательность команд:

                 SFILENAME.ASM
                 РSTART ADR,END,ADR
                 LSTART ADR,FFFF

      Формат команд:

 Р - начальный адрес, конечный адрес.

 2.12. Команда Q - подавление вывода на консоль.

      Ввод  команды  Q  перед любой командой  подавляет  вывод  на
 консоль.  Например,  запись файла на диск можно осуществлять, ис-
 пользуя:

         QL100,3FF       или
         QL100,FFFF      если в управляющую таблицу введен Е.

      Другой пример:

         QB100,XXXX

      Создание таблицы меток.


 2.13. Команда R -чтение файла

      Команда позволяет считывать файлы с диска в память. При этом
 могут  считаваться  файлы с дизассемблируемой программой,  так  и
 файлы,  содержащие метки,  комментарии и управляющую таблицу, что
 позволяет проводить дизассемблирование за несколько приемов.

      Форматы команды:

 RFILENAME.COM   считывает .СОМ в 100H + смещение
 RFILENAME.CTL   загружает управляющую таблицу
 RFILENAME.SYM   загружает таблицу меток
 RFILENAME.DOC   загружает  комментарии  (перед этим  должно  быть
                 командой U установлена область комментариев).

 2.14. Команда S - запись на диск.

      Записывает на диск файлы .ASM,  а также управляющую таблицу,
 таблицу меток и комментарии.

             Форматы команды:

        SFILENAME.CTL   запись управляющей таблицы
        SFILENAME.SYM   запись таблицы меток
        SFILENAME.DOC   запись комментариев
        SFILENAME.ASM   запись файла .ASM.

      В последнем случае файл .ASM только открывается.  Для записи
 на диск используйте команду L, а для закрытия файла команду Z.

 2.15. Команда U - определение области комментариев.

      Форматы команды:

 UNNNN, где NNNN - начальный адрес области комментариев.

 2.16. Команда Z - закрыть файл .ASM.

      Используется,  если не был введен в управляющую таблицу вход
      Е.

 Формат команды:  Z .

                

 3. Пример дизассемблирования.


      Заданный  файл  TEST.COM,  занимающий область  100H  - 2FFН.
 предложения, которым предшествует - - >, вводятся вами:

                 - - - RESOURCE
                 - - - О2200

      Устанавливаем  смещение 2200,  т.е.  программа будет  загру-
 жаться в 2200 + 100 = 2300.

                 - - - RTEST.COM

      Считываем файл в память. система отвечает :

                2500   0300,

 где

 2500 - действительный старший адрес загрузки;
 0300 -  оригинальный старший адрес программы.

      Запомните этот адрес (300),  т.к.  Вы можите пометить вход е
 по этому адресу в управляющую таблицу. Напоминаем, что все коман-
 ды "L" и "D" работают с добавлением смещения.  Кроме  того,  если
 программа  имеет большое количество меток,  вы должны  установить
 большее смещение.  Используете команду "?" для получения информа-
 ции  о  таблицах.  Если вы увидите,  что таблица меток  достигает
 файла .СОМ. Введите большее смещение и перезагрузите файл .СОМ.

      Если  вы хотите вывести содержание памяти с  действительными
 адресами,  установите  смещение  0 (но не забывайте  вернуть  его
 обратно).

      Если вы собираетесь дизассемблировать программу, находящуюся
 в  памяти с оригинальными адресами (например,  ССР) не устанавли-
 вайте смещение. Его исходное состояние при загрузке равно 0.

         - -- L 100      выводит 10 строк листинга
         - -- D 100      выводит 80Н байт вашей программы

 заметим,  что  это типовые шаги при работе с только что считанной
 программой.  Для определения псевдокоманд DB используйте  команду
 D.

      Для  автоматического ввода DB используйте команду A,  однако
 после  нее  вы должны проверить,  не распространились  ли  DB  на
 команды.  Все  печатные символы 0DH,  0AH и 00 являются  хорошими
 кандидатами для DB в коде ASCII.

      Для  определения  DB  должны встретиться подряд не  менее  8
 символов  ASCII,  чтобы отличить их от последовательности  команд


 MOV.

      Для  удаления ошибочных входов в управляющией таблице,  соз-
 данных командой A,  используйте команду CNNNN,K, но затем введите
 правильный адрес:

 CNNNN,I.

 Если  вы  рассматриваете программу чтобы  собственноручно  ввести
 псевдокоманды DB, используйте для их ввода команду "C".

      Например, программа, начинающаяся с

                 0100 JMP START
                 0103 DB 'COPYRIGHT'...
                 0117 start ...

      при использовании команды D выглядит следующим образом:

 0100 C3170144 4F50XXXX XXXXXXXX XXXXXXXX  *...COPYRIGHT ...*
 0110 XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX  *................*

      Исходя  из  этого  вы можете ввести  в  таблицу  управляющие
 символы  для  переключения в режим DB с адреса 103 и  возврата  в
 режим команд с адреса 117:

                 С103, В
                 С117, I

      Продолжайте просматривать программу с целью удаления  лишних
 DB, созданных управляющими входами В.

      Отметим,  что  идущие подряд несколько символов  не  требуют
 разделения вводом дополнительного входа в,  но что его ввод озна-
 чает начало новой строки, т.е. если вы имеете имена команд в коде
 асции, например:

                 02Е5 DB 'LOAD'
                 02Е9 DB 'SAVE'

      после дизассембирования вы получите:

                 02Е5 DB 'LOADSAVE'

      вы можете ввести дополнительный вход в в управляющую таблицу
 С2Е9,В в результате чего листинг будет выглядеть:

                 02Е5 DB 'LOAD'
                 02Е9 DB 'SAVE'

      что ближе к истине и более читабельно.

      Перед генерацией каждого байта как DB,  просматривается таб-
 лица  меток,  и если этой ячейке соответствует метка,  начинается
 новая строка.  Так, если в таблице меток для "SAVE" и "LOAD" были
 введены  метки "SAVELIT" и "LOADLIT",  то не нужно вводить  в  по
 адресу 02Е9,B,т.к. Наличие метки означает новую строку. Указанное
 разделение  по меткам не производится для псевдокоманды  DS.  Это
 означает,  что  для  разделения массива DS необходимо для  каждой
 области  DS вводить вход в управляющую  таблицу,  т.к.  метки  не
 будут разбивать общую область на отдельные DS.

      После  создания управляющей таблицы поместите в нее В  конце
 вашей  программы  вход Е.  Это будет прерывать команду   в  конце
 вашей  программы и кроме того,  если вы записываете файл на диск,
 закрывать этот файл.  Если вы не определили вход Е, то для преры-
 вания  команды  L используйте ввод любого символа  (кроме  CTL-C,
 который перезагружает СР/М).

      Если вы использовали L для записи на диск,  то для  закрытия
 файла можете использовать команду Z.

      После  создания  DB вы можете проверить,  как выглядит  ваша
 программа,  и определить функциональное назначение отдельных час-
 тей.  Когда вы сделали это, вы можете ввести для некоторых частей
 символические метки.  Например,  если вы определили, что с ячейки
 7EF начинается программа вывода символов /TYPE/, вы можете ввести
 по этому адресу метку:

                 E7EF,.TYPE

 все  символические метки начинаются с ".",  чтобы отличить их  от
 16-ричных  данных вы можете ввести метки,  используя  команду  в,
 которая  вводит метки вида лнннн для всех двухбайтовых операндов.
 при этом она создает и не нужные метки,  такие,  как L0000 и т.п.
 Вы  можете использовать команду к для удаления ненужных меток  из
 таблицы

                 K.L0000

      Когда  вы встречаете команды со ссылками на  метки,  опреде-
 лите,  на какой тип области ссылается команда. Обычно команды LXI
 ссылаются на рабочую область,  определяемую как DS,  или на  сим-
 вольную последовательность,  определяемую DB.  В последнем случае
 область  уже определена входами в в управляющей таблице.  Команды
 лхлд и схлд могут использовать операнды типа DW.  Например,  если
 вы встретили LHLD 0534Н,  вы можете ввести в управляющую  таблицу
 В:

                 C534,В

      Отметим, что установленный режим будет действовать до следу-
 ющего  управляющего входа.  Таким образом,  если 534,В  последний
 вход  в  управляющей таблице,  то все данные с этой  точки  будут
 рассматриваться как DW.

      Допустим,  что с адреса 7CF расположен 128-байтный буфер для
 операции ввода/вывода с диском и вы хотите получить в листинге:

                 DKBUF:          ;07CFH┼


                        DS 80H

      в этом случае вы должны ввести следующие команды:

         C7CF,S     - начало DS
         C84F,B     - конец DS
         E7CF,DKBUF - ввод символической метки

      Продолжайте  работу,  используя команды L,  C и E ,  пока не
 получите удовлетворяющий вас листинг. После этого вы можете запи-
 сывать на диск управляющую таблицу,  таблицу меток и комментарии,
 что позволяет вам в дальнейшем вернуться в дизассемблер и продол-
 жить работу.

         SFILENAME.CTL   запись управляющей таблицы
         SFILENAME.SYM   запись таблицы меток
         SFILENAME.DOC   запись комментариев

      Перед именем файла может указываться диск, наприимер:

                 A:FILENAME.CTL

      Теперь  вы можете вернуть в СР/М и в  дальнейшем  продолжить
 дизассемблирование введя:

                 RESOURCE
                 О2200
                 RTEMP.COM
                 RTEMP.SYM
                 RTEMP.CTL
                 UXXXX
                 RTEMP.DOC

      Если  вы хотите записать файл типа .ASM на диск,  проделайте
 следующие операции:  убедитесь, что в управляющей таблице опреде-
 лен конец вашей программы (т.е.  есть вход Е), иначе вам придется
 закрывать файл командой Z. Введите

                 SFILENAME.ASM

      В ответ выведется сообщение,  что файл открыт.  Теперь любая
 команда L, A или В будет осуществлять запись на диск. Т.к. коман-
 да  L  выводит только 10  строк,  используйте  формат  LADDR,FFFF
 который  выводит  листинг до конца программы.  Если это  заключи-
 тельная запись ASM на диск,  вы можете ввести псевдокоманды ORG и
 EQU в вашем листинге, используя команду Р. Команда Р создает ORG,
 а  затем  просматривает  таблицу меток и создает  EQU  для  тех,
 которые находятся за пределами вашей программы, например:

                 BDOS EQU 5H
                 FCB  EQU 5CH и т.д.

      Дополнительные команды.

      Если вы ввели метку, но хотите удалить ее, используйте:┼

                 K.SYMBOL

      Чтобы изменить безликую метку лнннн не значащую,  используй-
 те:

                 K.L0334
                 E334,.TYPE

      можно использовать

                 E.L0334,.TYPE
                 K.L0334

      но это дольше набирать.

      Команда  "?"  выводит сведения о  таблицах  и  использовании
 памяти.

      Команда C выводит всю управляющую таблицу,  а CNNNN, начиная
 с адреса NNNN.

      Команда  DS выводит всю таблицу меток,  DS.SYMBOL - с  метки
 SYMBOL, DS.F - метки, начинающиеся символом "F".
                

 4. Краткий перечень команд.


      Адреса в командах вводятся в 16-ричном формате.  Любой адрес
 может быть заменен символической меткой.

 ;адрес, комментарий - ввод комментария
 ;адрес              - вывод  существующего комментария
 ;                   - вывод входов таблицы комментариев
 ;адрес,             - удаление комментария
 A                   - ввод DB (операнды см. U L)
 В                   - ввод меток (операнды см. U L)
 С                   - вывод управляющей таблицы
 СNNNN               - вывод управляющей таблицы с адреса NNNN
 CNNNN,X             - определить формат с адреса NNNN (B,E,I,S,W)
 DXXXX               - вывод 80Н символов с ХХХХ
 DAAAA,ВВВВ          - вывод символов с АААА до ВВВВ
 D,ВВВВ              - вывод символов с текущего адреса до ВВВВ
 D                   - вывод символов 80Н с текущего адреса
 Д=NN                - установка размера вывода NN
 DS                  - вывод таблицы меток
 DS.SYMBOL           - вывод таблицы меток, начиная с SYMBOL
 ENNNN.SYMBOL        - ввод метки в таблицу меток
 FNNNN,SSSS          - поиск адреса NNNN, начиная с SSSS
 F                   - продолжение предыдущего поиска
 FNNNN               - поиск NNNN
 K.SYMBOL            - удаление метки из таблицы
 L                   - выводит 10 строк листинга
 LSSSS               - выводит 10 строк листинга с адреса сссс
 LSSSS,EEEE          - выводит листинг с адреса SSSS до ЕЕЕЕ
 L,EEEE              - выводит листинг с текущего адреса до ЕЕЕЕ
 L=NN                - установка количества строк NN
 О                   - вывод установленного смещения
 ОNNNN               - установка смещения
 Р адрес начала, адрес конца
                     - создает пролог программы
 Q                   - перед  любой  командой подавляет  вывод  на
                       консоль
 RFILENAME.COM       - загрузка файла в 100 + смещение
 RFILENAME.CTL       - загрузка управляющей таблицы
 RFILENAME.SYM       - загрузка таблицы меток
 RFILENAME.DOC       - загрузка комментариев
 SFILENAME.DOC       - запись комментариев
 SFILENAME.ASМ       - запись файла .ASM
 SFILENAME.CTL       - запись управляющей таблицы
 SFILENAME.SYM       - запись таблицы меток
 UNNNN               - установка области комментариев
 Х                   - удаление всех меток и управляющих входов
 Z                   - закрытие файла .ASM
 ?                   - вывод сведений о таблицах.



в 80Н с текущего адреса
 Д=NN                - установка размера вывода NN
 DS                  - вывод таблицы меток