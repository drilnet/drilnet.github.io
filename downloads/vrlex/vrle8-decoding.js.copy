//
// Ukraine. (C) Демидов С.В.
//

	// 22 байта в шестнадцатеричной системе счисления.
	// Количество байт: заголовок 6 байт, закодированные данные 16 байт, итого 22 байта.
	// 1-й 2-й 3-й 4-й 5-й 6-й байт.
	//  V   R   L   E   8   0 (0 - зарезервированный байт).
	var array1 = [
			0x56, 0x52, 0x4c, 0x45, 0x38, 0x00, 0x83, 0x31, 0x85, 0x35, 0x01,
			0x62, 0x83, 0x33, 0x87, 0x61, 0x86, 0x62, 0x85, 0x63, 0x01, 0x31
			];

	// Сюда декодирование.
	var array2 = [];

	// На выходе в массиве array2 будут раскодированные байты
	// (коды символов, длина 31 байт): 11155555b333aaaaaaabbbbbbccccc1).

	var addr1, addr2, bits, cb, tb;

	// Декодирование в array2.
	// addr1 = 6 - пропуск заголовка.
	for (addr1 = 6; addr1 < array1.length;)
		{

		// Логическое И (&).
		//
		//   -------------
		//   | x | y | f |
		//   -------------
		//   | 0 | 0 | 0 |
		//   | 0 | 1 | 0 |
		//   | 1 | 0 | 0 |
		//   | 1 | 1 | 1 |
		//   -------------

		// Установить биты 6, 5, 4, 3, 2, 1, 0 в ноль, 7 бит оставить без изменений.
		bits = 128 & array1[addr1]; // 80H и array1[addr1]. 128D = 80H.

		// Если 7 бит 0 - неповторяющиеся.
		if (bits == 0)
			{
			// Неповторяющиеся байты.
			// ---

			tb = array1[addr1++];

			// Порция.
			for (cb = 0; cb < tb; cb++)
				{
				array2[addr2++] = array1[addr1++];
				}
			}
			else
			{
			// Повторяющиеся байты.
			// ---

			// 7 бит 1 - повторяющиеся.
			// Установить 7 бит в ноль, остальные оставить без изменений.
			tb = 127 & array1[addr1++]; // 7FH и tb.

			// Порция.
			for (cb = 0; cb < tb; cb++)
				{
				array2[addr2++] = array1[addr1];
				}
			addr1++;
			}
		}